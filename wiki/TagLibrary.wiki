#summary Arianna Tag Library Documentation

At this momentthe library is composed by a tag only.

To use it add the following declaration to your JSP.
{{{
<%@ taglib prefix="bc" uri="/struts-arianna-tags" %>
}}}

= Tag: `breadcrumbs` =

The <bc:breadcrumbs> tag acts as in  <s:iterator> tag iterating over the breadcrumbs trail.

|| *Attribute* || *Required* || *Description* ||
|| `var` || no || the name used to reference the _crumb_ pushed into the Value Stack ||
|| `status` || no || If specified, an instanceof `IteratorStatus` will be pushed into stack upon each iteration ||

At each iteration it push into the Value Stack _the crumb_ (a bean of type `Crumb`) which has the following properties:


|| *Property* || *Type* || *Description* ||
|| timestamp || `Date` || the time stamp of the crumb creation. ||
|| name || `String` || the name of the crumb. ||
|| action || `String` ||the name of the action invoked. ||
|| method || `String` ||the name of the method invoked. ||
|| namespace || `String` || the namespace to which the invoked action belongs to. ||
|| params || `Map` || the `Map` containing the request's parameters of the original invocation.||


== Examples ==

=== simple crumbs ===
  {{{
  <%@ taglib prefix="bc" uri="/struts-arianna-tags" %>
    ...
  <bc:breadcrumbs var='c' status='s'>
    <s:url id='url' action="%{action}" namespace="%{namespace}" method="%{method}" />
    <s:a href='%{url}'><s:property value='name'/></s:a>
  </bc:breadcrumbs>
    ...
  }}}

=== rendering of parameters ===
There is a well known problem when you need to build urls with arbitrary parameters (see [http://stackoverflow.com/questions/872375/struts2-adding-parameters-from-a-map-to-a-url-tag adding-parameters-from-a-map-to-a-url-tag] for a discussion and possible solutions)
The following code shows how to build urls using JSTL core tags.
{{{	
	<!-- add the jstl core tag library -->
	<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>
	...	
	<bc:breadcrumbs var='c' status='s'>
		<!-- use the usual way to build the url for a struts action -->
		<s:url var="surl" action="%{action}" namespace="%{namespace}" includeContext="false"/>
		
		<!-- use the tags: url and param to effectively build the url -->    
		<c:url var="url" value="${surl}">
			<!-- iterate on parameter -->             
	    	<c:forEach items="${c.params}" var="p">
				<!-- iterate on parameter values -->             
	    		<c:forEach var="v" items="${p.value}">${v}
	        		<c:param name="${p.key}" value="${v}"/>
	        	</c:forEach>
			</c:forEach>
		</c:url>

		<!-- retrieve the url built and render an HTML anchor -->
		<s:a href="%{#attr['url']}">${c.name}</s:a>
	</bc:breadcrumbs>	
	...
}}}
alternatively, if you feel the code above too verbose, you can resort to a tag library available [http://www.objectify.be/wordpress/?p=64 here] specifically designed to add arbitrary parameters to a URL in struts^2^